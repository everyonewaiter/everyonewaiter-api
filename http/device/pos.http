### 1. POS 테이블 목록 조회
< {%
  const deviceId = request.environment.get("devices.pos.id");
  const deviceName = request.environment.get("devices.pos.name");
  const devicePurpose = request.environment.get("devices.pos.purpose");
  const secretKey = request.environment.get("devices.pos.secretKey");

  const method = request.method;
  const uri = request.url
  .tryGetSubstituted()
  .split(request.environment.get("url"))[1];
  const timestamp = Date.now().toString();

  const signature = crypto.hmac.sha256()
  .withTextSecret(secretKey)
  .updateWithText(`${method} ${uri}\n`)
  .updateWithText(`${deviceId} ${devicePurpose} ${deviceName}\n`)
  .updateWithText(`${timestamp}`)
  .digest()
  .toBase64();

  request.variables.set("accessKey", deviceId);
  request.variables.set("signature", signature);
  request.variables.set("timestamp", timestamp);
%}

GET {{url}}/v1/pos/tables
Content-Type: application/json
x-ew-access-key: {{accessKey}}
x-ew-signature: {{signature}}
x-ew-timestamp: {{timestamp}}

### 2. POS 테이블 액티비티 상세 조회
< {%
  const deviceId = request.environment.get("devices.pos.id");
  const deviceName = request.environment.get("devices.pos.name");
  const devicePurpose = request.environment.get("devices.pos.purpose");
  const secretKey = request.environment.get("devices.pos.secretKey");

  const method = request.method;
  const uri = request.url
  .tryGetSubstituted()
  .split(request.environment.get("url"))[1];
  const timestamp = Date.now().toString();

  const signature = crypto.hmac.sha256()
  .withTextSecret(secretKey)
  .updateWithText(`${method} ${uri}\n`)
  .updateWithText(`${deviceId} ${devicePurpose} ${deviceName}\n`)
  .updateWithText(`${timestamp}`)
  .digest()
  .toBase64();

  request.variables.set("accessKey", deviceId);
  request.variables.set("signature", signature);
  request.variables.set("timestamp", timestamp);
%}

GET {{url}}/v1/pos/tables/1
Content-Type: application/json
x-ew-access-key: {{accessKey}}
x-ew-signature: {{signature}}
x-ew-timestamp: {{timestamp}}

### 3. 테이블 주문 할인
< {%
  const deviceId = request.environment.get("devices.pos.id");
  const deviceName = request.environment.get("devices.pos.name");
  const devicePurpose = request.environment.get("devices.pos.purpose");
  const secretKey = request.environment.get("devices.pos.secretKey");

  const method = request.method;
  const uri = request.url
  .tryGetSubstituted()
  .split(request.environment.get("url"))[1];
  const timestamp = Date.now().toString();

  const signature = crypto.hmac.sha256()
  .withTextSecret(secretKey)
  .updateWithText(`${method} ${uri}\n`)
  .updateWithText(`${deviceId} ${devicePurpose} ${deviceName}\n`)
  .updateWithText(`${timestamp}`)
  .digest()
  .toBase64();

  request.variables.set("accessKey", deviceId);
  request.variables.set("signature", signature);
  request.variables.set("timestamp", timestamp);
%}

POST {{url}}/v1/pos/tables/1/discount
Content-Type: application/json
x-ew-access-key: {{accessKey}}
x-ew-signature: {{signature}}
x-ew-timestamp: {{timestamp}}

{
  "discountPrice": 10000
}

### 4. 주문 취소
< {%
  const deviceId = request.environment.get("devices.pos.id");
  const deviceName = request.environment.get("devices.pos.name");
  const devicePurpose = request.environment.get("devices.pos.purpose");
  const secretKey = request.environment.get("devices.pos.secretKey");

  const method = request.method;
  const uri = request.url
  .tryGetSubstituted()
  .split(request.environment.get("url"))[1];
  const timestamp = Date.now().toString();

  const signature = crypto.hmac.sha256()
  .withTextSecret(secretKey)
  .updateWithText(`${method} ${uri}\n`)
  .updateWithText(`${deviceId} ${devicePurpose} ${deviceName}\n`)
  .updateWithText(`${timestamp}`)
  .digest()
  .toBase64();

  request.variables.set("accessKey", deviceId);
  request.variables.set("signature", signature);
  request.variables.set("timestamp", timestamp);
%}

POST {{url}}/v1/pos/tables/1/orders/722956399809673989/cancel
Content-Type: application/json
x-ew-access-key: {{accessKey}}
x-ew-signature: {{signature}}
x-ew-timestamp: {{timestamp}}

### 5. 테이블 이동
< {%
  const deviceId = request.environment.get("devices.pos.id");
  const deviceName = request.environment.get("devices.pos.name");
  const devicePurpose = request.environment.get("devices.pos.purpose");
  const secretKey = request.environment.get("devices.pos.secretKey");

  const method = request.method;
  const uri = request.url
  .tryGetSubstituted()
  .split(request.environment.get("url"))[1];
  const timestamp = Date.now().toString();

  const signature = crypto.hmac.sha256()
  .withTextSecret(secretKey)
  .updateWithText(`${method} ${uri}\n`)
  .updateWithText(`${deviceId} ${devicePurpose} ${deviceName}\n`)
  .updateWithText(`${timestamp}`)
  .digest()
  .toBase64();

  request.variables.set("accessKey", deviceId);
  request.variables.set("signature", signature);
  request.variables.set("timestamp", timestamp);
%}

POST {{url}}/v1/pos/tables/1/move/30
Content-Type: application/json
x-ew-access-key: {{accessKey}}
x-ew-signature: {{signature}}
x-ew-timestamp: {{timestamp}}

### 5. 테이블 완료
< {%
  const deviceId = request.environment.get("devices.pos.id");
  const deviceName = request.environment.get("devices.pos.name");
  const devicePurpose = request.environment.get("devices.pos.purpose");
  const secretKey = request.environment.get("devices.pos.secretKey");

  const method = request.method;
  const uri = request.url
  .tryGetSubstituted()
  .split(request.environment.get("url"))[1];
  const timestamp = Date.now().toString();

  const signature = crypto.hmac.sha256()
  .withTextSecret(secretKey)
  .updateWithText(`${method} ${uri}\n`)
  .updateWithText(`${deviceId} ${devicePurpose} ${deviceName}\n`)
  .updateWithText(`${timestamp}`)
  .digest()
  .toBase64();

  request.variables.set("accessKey", deviceId);
  request.variables.set("signature", signature);
  request.variables.set("timestamp", timestamp);
%}

POST {{url}}/v1/pos/tables/1/complete
Content-Type: application/json
x-ew-access-key: {{accessKey}}
x-ew-signature: {{signature}}
x-ew-timestamp: {{timestamp}}

### 6. 주방 재전송
< {%
  const deviceId = request.environment.get("devices.pos.id");
  const deviceName = request.environment.get("devices.pos.name");
  const devicePurpose = request.environment.get("devices.pos.purpose");
  const secretKey = request.environment.get("devices.pos.secretKey");

  const method = request.method;
  const uri = request.url
  .tryGetSubstituted()
  .split(request.environment.get("url"))[1];
  const timestamp = Date.now().toString();

  const signature = crypto.hmac.sha256()
  .withTextSecret(secretKey)
  .updateWithText(`${method} ${uri}\n`)
  .updateWithText(`${deviceId} ${devicePurpose} ${deviceName}\n`)
  .updateWithText(`${timestamp}`)
  .digest()
  .toBase64();

  request.variables.set("accessKey", deviceId);
  request.variables.set("signature", signature);
  request.variables.set("timestamp", timestamp);
%}

POST {{url}}/v1/pos/tables/1/resend-receipt
Content-Type: application/json
x-ew-access-key: {{accessKey}}
x-ew-signature: {{signature}}
x-ew-timestamp: {{timestamp}}

### 7. 주문 수정
< {%
  const deviceId = request.environment.get("devices.pos.id");
  const deviceName = request.environment.get("devices.pos.name");
  const devicePurpose = request.environment.get("devices.pos.purpose");
  const secretKey = request.environment.get("devices.pos.secretKey");

  const method = request.method;
  const uri = request.url
  .tryGetSubstituted()
  .split(request.environment.get("url"))[1];
  const timestamp = Date.now().toString();

  const signature = crypto.hmac.sha256()
  .withTextSecret(secretKey)
  .updateWithText(`${method} ${uri}\n`)
  .updateWithText(`${deviceId} ${devicePurpose} ${deviceName}\n`)
  .updateWithText(`${timestamp}`)
  .digest()
  .toBase64();

  request.variables.set("accessKey", deviceId);
  request.variables.set("signature", signature);
  request.variables.set("timestamp", timestamp);
%}

PUT {{url}}/v1/pos/tables/1/orders
Content-Type: application/json
x-ew-access-key: {{accessKey}}
x-ew-signature: {{signature}}
x-ew-timestamp: {{timestamp}}

{
  "orders": [
    {
      "orderId": 728257503859058549,
      "orderMenus": [
        {
          "orderMenuId": 728257503875835895,
          "quantity": 1
        },
        {
          "orderMenuId": 728257503875835896,
          "quantity": 1
        }
      ]
    }
  ]
}

### 8. POS 테이블 액티비티 상세 조회 By ID
< {%
  const deviceId = request.environment.get("devices.pos.id");
  const deviceName = request.environment.get("devices.pos.name");
  const devicePurpose = request.environment.get("devices.pos.purpose");
  const secretKey = request.environment.get("devices.pos.secretKey");

  const method = request.method;
  const uri = request.url
  .tryGetSubstituted()
  .split(request.environment.get("url"))[1];
  const timestamp = Date.now().toString();

  const signature = crypto.hmac.sha256()
  .withTextSecret(secretKey)
  .updateWithText(`${method} ${uri}\n`)
  .updateWithText(`${deviceId} ${devicePurpose} ${deviceName}\n`)
  .updateWithText(`${timestamp}`)
  .digest()
  .toBase64();

  request.variables.set("accessKey", deviceId);
  request.variables.set("signature", signature);
  request.variables.set("timestamp", timestamp);
%}

GET {{url}}/v1/pos/tables/activities/720881799382947490
Content-Type: application/json
x-ew-access-key: {{accessKey}}
x-ew-signature: {{signature}}
x-ew-timestamp: {{timestamp}}
